package main

import (
	"log"
	"net/http"
	"net/url"
	"os"
	"strings"
	"time"

	"github.com/joho/godotenv"
)

const stats_path = "luh_stats.txt"
const url_klausuren = "https://www.et-inf.uni-hannover.de/fileadmin/et-inf/Dateien-Studium/Studiengaenge_Informatik/Klausuren_Inf_TI.pdf"
const url_modkat = "https://modkat.dbs.uni-hannover.de/modkat/materialien/modkat_bsc_infpo17.pdf"

func send(message string, chat_id string, api_key string) {
	// Generated by curl-to-Go: https://mholt.github.io/curl-to-go
	params := url.Values{}
	params.Add("chat_id", chat_id)
	params.Add("text", message)
	body := strings.NewReader(params.Encode())

	req, err := http.NewRequest("POST", "https://api.telegram.org/bot"+api_key+"/sendMessage", body)
	if err != nil {
		// handle err
		panic(err)
	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")

	resp, err := http.DefaultClient.Do(req)
	if err != nil {
		// handle err
		panic(err)
	}
	defer resp.Body.Close()
}

func main() {
	// Load variables from the .env file
	err := godotenv.Load()
	if err != nil {
		log.Fatal("Error loading .env file")
	}
	chat_id := os.Getenv("CHAT_ID")
	api_key := os.Getenv("API_KEY")

	// Create file if not exists
	_, err = os.OpenFile(stats_path, os.O_RDONLY|os.O_CREATE, 0644)
	if err != nil {
		panic(err)
	}
	file, err := os.ReadFile(stats_path)
	if err != nil {
		panic(err)
	}

	var client = &http.Client{
		Timeout: time.Second * 10,
	}

	res_klausuren, err := client.Head(url_klausuren)
	if err != nil {
		panic(err)
	}
	res_modkat, err := client.Head(url_modkat)
	if err != nil {
		panic(err)
	}

	klausuren_modified := res_klausuren.Header["Last-Modified"][0]
	modkat_modified := res_modkat.Header["Last-Modified"][0]
	out := klausuren_modified + ";" + modkat_modified

	if len(string(file)) != 0 {
		s := strings.Split(string(file), ";")
		for idx, line := range s {
			if (idx == 0) && (line != klausuren_modified) {
				send("Klausurenplan Update!", chat_id, api_key)
			} else if (idx == 1) && (line != modkat_modified) {
				send("ModKat Update!", chat_id, api_key)
			}
		}
	}

	err = os.WriteFile(stats_path, []byte(out), 0644)
	if err != nil {
		panic(err)
	}
}
